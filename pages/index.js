import Head from "next/head";
import { FaSun, FaMoon } from "react-icons/fa";
import { useContext, useEffect } from "react";
import Intro from "./Intro";
import NodeGraphSkills from "./NodeGraphSkills";
import Certificates from "./Certificates";
import MobileNav from "./MobileNav";
import Projects from "./Projects";
import AppContext from "../state/AppContext";
import { pages } from "../state/AppProvider";
import SkillsSection from "./SkillsSection";
import Contact from "./Contact";

const Home = function () {
  const {
    darkMode,
    setDarkMode,
    isLargeScreen,
    setIsLargeScreen,
    currentPage,
    setCurrentPage,
  } = useContext(AppContext);

  useEffect(() => {
    const handleResize = () => {
      setIsLargeScreen(window.innerWidth >= 768);
    };
    window.addEventListener("resize", handleResize);
    handleResize();
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  useEffect(() => {
    if (window.location.hash === "#contact") {
      window.history.replaceState(null, null, window.location.pathname);
      window.scrollTo(0, 0);
    }
  }, []);

  const downloadResume = function () {
    const link = document.createElement("a");
    link.href =
      "https://drive.google.com/file/d/1H7leexzj77C2md2vfG9OdlTZDVIB5PkQ/view?usp=sharing";
    link.download = "agnesh_resume.pdf";
    link.dispatchEvent(
      new MouseEvent("click", {
        bubbles: true,
        cancelable: true,
        view: window,
      })
    );
  };

  return (
    <div className={darkMode ? "dark" : ""} style={{ height: 100 }}>
      <Head>
        <title>Agnesh's Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="bg-white px-4 dark:bg-gray-900 lg:px-20">
        <section className="flex min-h-screen flex-col justify-between">
          <nav className="mb-12 flex rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600 py-4 px-6 shadow-lg">
            {/* Left-aligned items */}
            <div className="flex items-center space-x-8 lg:space-x-20">
              {!isLargeScreen && <MobileNav setIsActive={setCurrentPage} />}
              <button
                className="font-poppins_semi_bold text-xl text-white transition duration-300 hover:text-gray-300 lg:text-2xl"
                onClick={() => setCurrentPage(pages.home)}
              >
                My Portfolio
              </button>
              {isLargeScreen && (
                <ul className="flex list-none items-center space-x-6 text-white">
                  <li>
                    <button
                      className="font-poppins_semi_bold text-lg transition duration-300 hover:text-yellow-400"
                      onClick={() => setCurrentPage(pages.certificates)}
                    >
                      Certificates
                    </button>
                  </li>
                  <li>
                    <button
                      className="font-poppins_semi_bold text-lg transition duration-300 hover:text-red-500"
                      onClick={() => setCurrentPage(pages.projects)}
                    >
                      Projects
                    </button>
                  </li>
                </ul>
              )}
            </div>

            {/* Right-aligned items */}
            <div className="ml-auto flex items-center space-x-4">
              <li className="list-none text-2xl lg:text-3xl lg:mr-5">
                {darkMode ? (
                  <FaSun
                    onClick={() => setDarkMode(!darkMode)}
                    className="cursor-pointer text-white transition duration-300 hover:text-gray-300"
                  />
                ) : (
                  <FaMoon
                    onClick={() => setDarkMode(!darkMode)}
                    className="cursor-pointer text-white transition duration-300 hover:text-gray-300"
                  />
                )}
              </li>
              <li className="list-none">
                <a
                  className="cursor-pointer rounded-lg bg-gradient-to-r from-violet-500 to-purple-500 px-6 py-2 text-white transition duration-300 hover:from-red-600 hover:to-red-500"
                  onClick={() => downloadResume()}
                >
                  Resume
                </a>
              </li>
            </div>
          </nav>

          {currentPage === pages.home && <Intro />}
          {currentPage === pages.home && (
            <NodeGraphSkills isLargeScreen={isLargeScreen} />
          )}
          {currentPage === pages.home && <Contact />}
          {currentPage === pages.certificates && <Certificates />}
          {currentPage === pages.projects && <Projects />}
        </section>
      </main>
    </div>
  );
};

export default Home;
